[blockcmt, /*\n// ====== main ====== //\nfunction main() => void                                            \n{\n  local c: int; \n  local b: int;  \n  local brr: int[2][3][4];\n  c := 400;\n  //write (c);\n                                         \n  brr[1+1][2][3] := c;\n  b := brr[2][2][3]+3;\n  write(b);\n  write (brr[2][2][3]*2);\n}\n*/, 1]
[blockcmt, /*\nfunction main() => void  \n{\n  local x: int;                                    // 1.1\n  local y: int;                                    // 1.1\n  local z: int;                                    // 1.1\n  y := 1 + 2 * 3;\n  write(y);                                       // 3.1, 5.1\n  read(x);                                         // 3.4\n  if (x > y + 10)                                  // 3.2, 5.1   \n  then	\n    {write(x+10);}                                   // 3.4, 5.1 \n  else\n    {write(x+1);}\n  ;                                    // 3.4, 5.1\n  z := 0;                                           // 3.1\n  while(z<=10) {                                   // 3.3, 5.1\n    write(z);                                      // 3.4\n    z := z + 1;                                     // 3.1\n  }; \n}*/, 17]
[blockcmt, /*\nfunction count(a: int, b: int) => int\n{ \n  if (a==b) \n  then\n  {\n    return(b);\n  }\n  else\n  {\n     write(a);\n  };\n  return(count(a+1, b));\n}\n\nfunction main() => void\n{\n  write(count(0,10));\n}\n*/, 38]
[class, class, 59] [id, B, 59] [lcurbr, {, 59]
[public, public, 60] [attribute, attribute, 60] [id, c, 60] [colon, :, 60] [int, int, 60] [semi, ;, 60]
[public, public, 61] [attribute, attribute, 61] [id, x, 61] [colon, :, 61] [float, float, 61] [semi, ;, 61]
[rcurbr, }, 62] [semi, ;, 62]
[class, class, 63] [id, A, 63] [lcurbr, {, 63]
[public, public, 64] [attribute, attribute, 64] [id, b, 64] [colon, :, 64] [id, B, 64] [semi, ;, 64]
[public, public, 65] [attribute, attribute, 65] [id, c, 65] [colon, :, 65] [float, float, 65] [semi, ;, 65]
[public, public, 66] [attribute, attribute, 66] [id, a, 66] [colon, :, 66] [int, int, 66] [semi, ;, 66]
[public, public, 67] [attribute, attribute, 67] [id, d, 67] [colon, :, 67] [int, int, 67] [lsqbr, [, 67] [intlit, 5, 67] [rsqbr, ], 67] [lsqbr, [, 67] [intlit, 4, 67] [rsqbr, ], 67] [semi, ;, 67]
[inlinecmt, // public function print(a: int) => void;, 68]
[rcurbr, }, 69] [semi, ;, 69]
[blockcmt, /*\nimplementation A{\n  function print(a: int) => void\n  {\n    write(a);\n    write(self.a);\n  }\n}*/, 70]
[function, function, 79] [id, main, 79] [lpar, (, 79] [rpar, ), 79] [arrow, =>, 79] [void, void, 79]
[lcurbr, {, 80]
[local, local, 81] [id, a, 81] [colon, :, 81] [id, A, 81] [semi, ;, 81]
[inlinecmt, //a.d[1][2] := 699;, 82]
[inlinecmt, //write(a.d[1][2]);, 83]
[id, a, 85] [dot, ., 85] [id, b, 85] [dot, ., 85] [id, c, 85] [assign, :=, 85] [intlit, 9, 85] [semi, ;, 85]
[write, write, 86] [lpar, (, 86] [id, a, 86] [dot, ., 86] [id, b, 86] [dot, ., 86] [id, c, 86] [rpar, ), 86] [semi, ;, 86]
[inlinecmt, //a.a := 69;, 88]
[inlinecmt, //write(a.a+1);, 89]
[inlinecmt, //a.print(96);, 90]
[blockcmt, /*\n  local x: int[1];\n  x[0] := 25;\n  write(x[0]);\n  */, 91]
[rcurbr, }, 96]
