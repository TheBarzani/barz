[class, class, 1] [id, CALCULATOR, 1] [lcurbr, {, 1]
[private, private, 2] [attribute, attribute, 2] [id, memory, 2] [colon, :, 2] [float, float, 2] [semi, ;, 2]
[public, public, 3] [attribute, attribute, 3] [id, x, 3] [colon, :, 3] [int, int, 3] [lsqbr, [, 3] [intlit, 10, 3] [rsqbr, ], 3] [semi, ;, 3]
[public, public, 4] [attribute, attribute, 4] [id, y, 4] [colon, :, 4] [float, float, 4] [lsqbr, [, 4] [intlit, 10, 4] [rsqbr, ], 4] [semi, ;, 4]
[rcurbr, }, 5] [semi, ;, 5]
[function, function, 7] [id, func1, 7] [lpar, (, 7] [rpar, ), 7] [arrow, =>, 7] [int, int, 7]
[lcurbr, {, 8]
[local, local, 9] [id, a, 9] [colon, :, 9] [int, int, 9] [semi, ;, 9]
[id, a, 10] [assign, :=, 10] [intlit, 111, 10] [semi, ;, 10]
[return, return, 11] [lpar, (, 11] [id, a, 11] [rpar, ), 11] [semi, ;, 11]
[rcurbr, }, 12]
[function, function, 14] [id, main, 14] [lpar, (, 14] [rpar, ), 14] [arrow, =>, 14] [void, void, 14]
[lcurbr, {, 15]
[local, local, 16] [id, x, 16] [colon, :, 16] [int, int, 16] [semi, ;, 16]
[local, local, 17] [id, y, 17] [colon, :, 17] [int, int, 17] [semi, ;, 17]
[local, local, 18] [id, z, 18] [colon, :, 18] [int, int, 18] [semi, ;, 18]
[local, local, 19] [id, ret, 19] [colon, :, 19] [int, int, 19] [semi, ;, 19]
[id, ret, 20] [assign, :=, 20] [id, func1, 20] [lpar, (, 20] [rpar, ), 20] [semi, ;, 20]
[write, write, 21] [lpar, (, 21] [id, ret, 21] [rpar, ), 21] [semi, ;, 21]
[id, x, 22] [assign, :=, 22] [intlit, 3, 22] [semi, ;, 22]
[id, y, 23] [assign, :=, 23] [intlit, 2, 23] [semi, ;, 23]
[id, z, 24] [assign, :=, 24] [id, x, 24] [or, or, 24] [intlit, 0, 24] [semi, ;, 24]
[if, if, 25] [lpar, (, 25] [id, x, 25] [lt, <, 25] [id, y, 25] [rpar, ), 25]
[then, then, 26] [lcurbr, {, 26]
[inlinecmt, // write (x-y);, 27]
[rcurbr, }, 28] [else, else, 28] [lcurbr, {, 28]
[inlinecmt, // write (y);, 29]
[inlinecmt, // write (x);, 30]
[rcurbr, }, 31] [semi, ;, 31]
[local, local, 32] [id, i, 32] [colon, :, 32] [int, int, 32] [semi, ;, 32]
[id, i, 33] [assign, :=, 33] [intlit, 0, 33] [semi, ;, 33]
[while, while, 34] [lpar, (, 34] [id, i, 34] [leq, <=, 34] [intlit, 10, 34] [rpar, ), 34] [lcurbr, {, 34]
[inlinecmt, // write(i);, 35]
[id, i, 36] [assign, :=, 36] [id, i, 36] [plus, +, 36] [intlit, 1, 36] [semi, ;, 36]
[rcurbr, }, 37] [semi, ;, 37]
[inlinecmt, // write(z);, 38]
[rcurbr, }, 39]
