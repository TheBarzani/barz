[blockcmt, /*class CLASS {\n  public attribute x: int[10][1];\n};\n\nfunction hi(a: int[5], b: int, c: int[10][9]) => int  \n{\n  //local b: CLASS;\n  //local x: CLASS[4];\n  //x[1] := b;\n}\n\n\nfunction main() => void  \n{\n\n  /*local x: int[5][4][3];\n  x[1][2][3] := 33;\n  write(x[1][2][3]);\n\n  \n  local z: int;\n  z := x[3][2][1];\n  local a: int;\n  local b: int;\n  a:=b;*/\n\n  local f : float;\n  local c1: CLASS[3];\n  local c2: CLASS;\n  c2 := c1[1];\n\n  // write(z);\n  \n}*/, 2]
[inlinecmt, // ======================== struct declarations ============================== //, 38]
[class, class, 39] [id, POLYNOMIAL, 39] [lcurbr, {, 39]
[public, public, 40] [function, function, 40] [id, evaluate, 40] [lpar, (, 40] [id, x, 40] [colon, :, 40] [float, float, 40] [rpar, ), 40] [arrow, =>, 40] [float, float, 40] [semi, ;, 40]
[rcurbr, }, 41] [semi, ;, 41]
[class, class, 43] [id, LINEAR, 43] [isa, isa, 43] [id, POLYNOMIAL, 43] [lcurbr, {, 43]
[private, private, 44] [attribute, attribute, 44] [id, a, 44] [colon, :, 44] [float, float, 44] [semi, ;, 44]
[private, private, 45] [attribute, attribute, 45] [id, b, 45] [colon, :, 45] [float, float, 45] [semi, ;, 45]
[public, public, 46] [function, function, 46] [id, build, 46] [lpar, (, 46] [id, A, 46] [colon, :, 46] [float, float, 46] [comma, ,, 46] [id, B, 46] [colon, :, 46] [float, float, 46] [rpar, ), 46] [arrow, =>, 46] [id, LINEAR, 46] [semi, ;, 46]
[public, public, 47] [function, function, 47] [id, evaluate, 47] [lpar, (, 47] [id, x, 47] [colon, :, 47] [float, float, 47] [rpar, ), 47] [arrow, =>, 47] [float, float, 47] [semi, ;, 47]
[rcurbr, }, 48] [semi, ;, 48]
[class, class, 50] [id, QUADRATIC, 50] [isa, isa, 50] [id, POLYNOMIAL, 50] [lcurbr, {, 50]
[private, private, 51] [attribute, attribute, 51] [id, a, 51] [colon, :, 51] [float, float, 51] [semi, ;, 51]
[private, private, 52] [attribute, attribute, 52] [id, b, 52] [colon, :, 52] [float, float, 52] [semi, ;, 52]
[private, private, 53] [attribute, attribute, 53] [id, c, 53] [colon, :, 53] [float, float, 53] [lsqbr, [, 53] [intlit, 2, 53] [rsqbr, ], 53] [lsqbr, [, 53] [intlit, 3, 53] [rsqbr, ], 53] [semi, ;, 53]
[public, public, 54] [function, function, 54] [id, evaluate, 54] [lpar, (, 54] [id, x, 54] [colon, :, 54] [float, float, 54] [rpar, ), 54] [arrow, =>, 54] [float, float, 54] [semi, ;, 54]
[public, public, 55] [function, function, 55] [id, build, 55] [lpar, (, 55] [id, A, 55] [colon, :, 55] [float, float, 55] [comma, ,, 55] [id, B, 55] [colon, :, 55] [float, float, 55] [comma, ,, 55] [id, C, 55] [colon, :, 55] [float, float, 55] [rpar, ), 55] [arrow, =>, 55] [id, QUADRATIC, 55] [semi, ;, 55]
[rcurbr, }, 56] [semi, ;, 56]
[inlinecmt, // ====== member function implementations ====== //  , 58]
[implementation, implementation, 59] [id, POLYNOMIAL, 59] [lcurbr, {, 59]
[function, function, 60] [id, evaluate, 60] [lpar, (, 60] [id, x, 60] [colon, :, 60] [float, float, 60] [rpar, ), 60] [arrow, =>, 60] [float, float, 60] [inlinecmt, // 2.1, 2.2, 60]
[lcurbr, {, 61]
[return, return, 62] [lpar, (, 62] [floatlit, 0.0, 62] [rpar, ), 62] [semi, ;, 62] [inlinecmt, // 2.3, 62]
[rcurbr, }, 63]
[rcurbr, }, 64]
[implementation, implementation, 66] [id, LINEAR, 66] [lcurbr, {, 66]
[function, function, 67] [id, build, 67] [lpar, (, 67] [id, A, 67] [colon, :, 67] [float, float, 67] [comma, ,, 67] [id, B, 67] [colon, :, 67] [float, float, 67] [rpar, ), 67] [arrow, =>, 67] [id, LINEAR, 67] [inlinecmt, // 2.1, 2.2, 67]
[lcurbr, {, 68]
[local, local, 69] [id, c, 69] [colon, :, 69] [int, int, 69] [semi, ;, 69]
[id, c, 70] [assign, :=, 70] [intlit, 1, 70] [plus, +, 70] [intlit, 1, 70] [semi, ;, 70]
[local, local, 71] [id, new_function, 71] [colon, :, 71] [id, LINEAR, 71] [semi, ;, 71] [inlinecmt, // 1.1, 71]
[id, new_function, 72] [dot, ., 72] [id, a, 72] [assign, :=, 72] [id, A, 72] [semi, ;, 72] [inlinecmt, // 3.1, 5.3, 72]
[id, new_function, 73] [dot, ., 73] [id, b, 73] [assign, :=, 73] [id, B, 73] [semi, ;, 73] [inlinecmt, // 3.1, 5.3, 73]
[id, a, 74] [assign, :=, 74] [id, A, 74] [semi, ;, 74]
[return, return, 75] [lpar, (, 75] [id, new_function, 75] [rpar, ), 75] [semi, ;, 75]
[rcurbr, }, 76]
[function, function, 78] [id, evaluate, 78] [lpar, (, 78] [id, x, 78] [colon, :, 78] [float, float, 78] [rpar, ), 78] [arrow, =>, 78] [float, float, 78] [inlinecmt, // 2.1, 2.2, 78]
[lcurbr, {, 79]
[local, local, 80] [id, result, 80] [colon, :, 80] [float, float, 80] [semi, ;, 80] [inlinecmt, // 1.1, 80]
[id, result, 81] [assign, :=, 81] [floatlit, 0.0, 81] [semi, ;, 81] [inlinecmt, // 3.1, 81]
[id, result, 82] [assign, :=, 82] [id, a, 82] [mult, *, 82] [id, x, 82] [plus, +, 82] [id, b, 82] [semi, ;, 82] [inlinecmt, // 3.1, 5.1, 82]
[return, return, 83] [lpar, (, 83] [id, result, 83] [rpar, ), 83] [semi, ;, 83] [inlinecmt, // 2.3, 83]
[rcurbr, }, 84]
[rcurbr, }, 85]
[implementation, implementation, 87] [id, QUADRATIC, 87] [lcurbr, {, 87]
[function, function, 88] [id, evaluate, 88] [lpar, (, 88] [id, x, 88] [colon, :, 88] [float, float, 88] [rpar, ), 88] [arrow, =>, 88] [float, float, 88]
[lcurbr, {, 89]
[local, local, 90] [id, result, 90] [colon, :, 90] [float, float, 90] [semi, ;, 90] [inlinecmt, // 1.1, 90]
[id, result, 91] [assign, :=, 91] [id, a, 91] [semi, ;, 91] [inlinecmt, // 3.1       , 91]
[id, result, 92] [assign, :=, 92] [id, result, 92] [mult, *, 92] [id, x, 92] [plus, +, 92] [id, b, 92] [semi, ;, 92] [inlinecmt, // 3.1, 5.1, 92]
[id, result, 93] [assign, :=, 93] [id, result, 93] [mult, *, 93] [id, x, 93] [plus, +, 93] [id, c, 93] [lsqbr, [, 93] [intlit, 1, 93] [rsqbr, ], 93] [lsqbr, [, 93] [intlit, 1, 93] [rsqbr, ], 93] [semi, ;, 93] [inlinecmt, // 3.1, 5.1, 93]
[return, return, 94] [lpar, (, 94] [id, result, 94] [rpar, ), 94] [semi, ;, 94] [inlinecmt, // 2.3, 94]
[rcurbr, }, 95]
[function, function, 97] [id, build, 97] [lpar, (, 97] [id, A, 97] [colon, :, 97] [float, float, 97] [comma, ,, 97] [id, B, 97] [colon, :, 97] [float, float, 97] [comma, ,, 97] [id, C, 97] [colon, :, 97] [float, float, 97] [rpar, ), 97] [arrow, =>, 97] [id, QUADRATIC, 97] [inlinecmt, // 2.1, 2.2, 97]
[lcurbr, {, 98]
[local, local, 99] [id, new_function, 99] [colon, :, 99] [id, QUADRATIC, 99] [semi, ;, 99] [inlinecmt, // 1.1, 99]
[id, new_function, 100] [dot, ., 100] [id, a, 100] [assign, :=, 100] [id, A, 100] [semi, ;, 100] [inlinecmt, // 3.1, 5.3, 100]
[id, new_function, 101] [dot, ., 101] [id, b, 101] [assign, :=, 101] [id, B, 101] [semi, ;, 101] [inlinecmt, // 3.1, 5.3, 101]
[id, new_function, 102] [dot, ., 102] [id, c, 102] [lsqbr, [, 102] [intlit, 1, 102] [rsqbr, ], 102] [lsqbr, [, 102] [intlit, 1, 102] [rsqbr, ], 102] [assign, :=, 102] [id, C, 102] [semi, ;, 102] [inlinecmt, // 3.1, 5.3, 102]
[return, return, 103] [lpar, (, 103] [id, new_function, 103] [rpar, ), 103] [semi, ;, 103]
[rcurbr, }, 104]
[rcurbr, }, 105]
[inlinecmt, // ====== main ====== //, 107]
[function, function, 108] [id, main, 108] [lpar, (, 108] [rpar, ), 108] [arrow, =>, 108] [void, void, 108] [inlinecmt, // 2.1, 2.2, 108]
[lcurbr, {, 109]
[local, local, 110] [id, arr, 110] [colon, :, 110] [int, int, 110] [lsqbr, [, 110] [intlit, 2, 110] [rsqbr, ], 110] [lsqbr, [, 110] [intlit, 3, 110] [rsqbr, ], 110] [lsqbr, [, 110] [intlit, 5, 110] [rsqbr, ], 110] [semi, ;, 110]
[local, local, 111] [id, f1, 111] [colon, :, 111] [id, LINEAR, 111] [semi, ;, 111] [inlinecmt, // 1.3, 2.1, 2.2, 2.4, 111]
[local, local, 112] [id, f2, 112] [colon, :, 112] [id, QUADRATIC, 112] [semi, ;, 112] [inlinecmt, // 1.3, 2.1, 2.2, 2.4, 112]
[local, local, 113] [id, counter, 113] [colon, :, 113] [int, int, 113] [semi, ;, 113] [inlinecmt, // 1.1, 113]
[id, f1, 114] [assign, :=, 114] [id, f1, 114] [dot, ., 114] [id, build, 114] [lpar, (, 114] [floatlit, 2.0, 114] [comma, ,, 114] [floatlit, 3.5, 114] [rpar, ), 114] [semi, ;, 114]
[id, f2, 115] [assign, :=, 115] [id, f2, 115] [dot, ., 115] [id, build, 115] [lpar, (, 115] [minus, -, 115] [floatlit, 2.0, 115] [comma, ,, 115] [floatlit, 1.0, 115] [comma, ,, 115] [floatlit, 0.0, 115] [rpar, ), 115] [semi, ;, 115]
[id, counter, 116] [assign, :=, 116] [intlit, 1, 116] [semi, ;, 116] [inlinecmt, // 3.1, 116]
[while, while, 118] [lpar, (, 118] [id, counter, 118] [leq, <=, 118] [intlit, 10, 1