[function, function, 1] [id, count, 1] [lpar, (, 1] [id, a, 1] [colon, :, 1] [int, int, 1] [comma, ,, 1] [id, b, 1] [colon, :, 1] [int, int, 1] [rpar, ), 1] [arrow, =>, 1] [int, int, 1]
[lcurbr, {, 2]
[if, if, 3] [lpar, (, 3] [id, a, 3] [eq, ==, 3] [id, b, 3] [rpar, ), 3]
[then, then, 4]
[lcurbr, {, 5]
[return, return, 6] [lpar, (, 6] [id, b, 6] [rpar, ), 6] [semi, ;, 6]
[rcurbr, }, 7]
[else, else, 8]
[lcurbr, {, 9]
[write, write, 10] [lpar, (, 10] [id, a, 10] [rpar, ), 10] [semi, ;, 10]
[rcurbr, }, 11] [semi, ;, 11]
[return, return, 12] [lpar, (, 12] [id, count, 12] [lpar, (, 12] [id, a, 12] [plus, +, 12] [intlit, 1, 12] [comma, ,, 12] [id, b, 12] [rpar, ), 12] [rpar, ), 12] [semi, ;, 12]
[rcurbr, }, 13]
[function, function, 15] [id, main, 15] [lpar, (, 15] [rpar, ), 15] [arrow, =>, 15] [void, void, 15]
[lcurbr, {, 16]
[write, write, 17] [lpar, (, 17] [id, count, 17] [lpar, (, 17] [intlit, 0, 17] [comma, ,, 17] [intlit, 10, 17] [rpar, ), 17] [rpar, ), 17] [semi, ;, 17]
[rcurbr, }, 18]
