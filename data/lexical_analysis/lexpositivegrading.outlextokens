[eq, ==, 1] [plus, +, 1] [or, or, 1] [lpar, (, 1] [semi, ;, 1] [int, int, 1] [while, while, 1] [local, local, 1]
[neq, <>, 2] [minus, -, 2] [and, and, 2] [rpar, ), 2] [comma, ,, 2] [float, float, 2] [if, if, 2] [constructor, constructor, 2]
[lt, <, 3] [mult, *, 3] [not, not, 3] [lcurbr, {, 3] [dot, ., 3] [void, void, 3] [then, then, 3] [attribute, attribute, 3]
[gt, >, 4] [div, /, 4] [rcurbr, }, 4] [colon, :, 4] [class, class, 4] [else, else, 4] [function, function, 4]
[leq, <=, 5] [assign, :=, 5] [lsqbr, [, 5] [arrow, =>, 5] [self, self, 5] [read, read, 5] [public, public, 5]
[geq, >=, 6] [rsqbr, ], 6] [isa, isa, 6] [write, write, 6] [private, private, 6]
[implementation, implementation, 7] [return, return, 7]

[intlit, 0, 13]
[intlit, 1, 14]
[intlit, 10, 15]
[intlit, 12, 16]
[intlit, 123, 17]
[intlit, 12345, 18]
[floatlit, 1.23, 20]
[floatlit, 12.34, 21]
[floatlit, 120.34e10, 22]
[floatlit, 12345.6789e-123, 23]
[id, abc, 25]
[id, abc1, 26]
[id, a1bc, 27]
[id, abc_1abc, 28]
[id, abc1_abc, 29]
[inlinecmt, // this is an inline comment, 31]
[blockcmt, /* this is a single line block comment */, 33]
[blockcmt, /* this is a \nmultiple line\nblock comment \n*/, 35]
[blockcmt, /* this is an imbricated \n/* block comment\n*/\n*/, 40]
